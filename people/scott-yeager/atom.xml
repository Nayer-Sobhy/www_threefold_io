<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>ThreeFold - scott_yeager</title>
	<subtitle>Our global digital backbone</subtitle>
	<link href="https://threefoldfoundation.github.io/www_threefold_io/people/scott-yeager/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://threefoldfoundation.github.io/www_threefold_io"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-02-03T00:00:00+00:00</updated>
	<id>https://threefoldfoundation.github.io/www_threefold_io/people/scott-yeager/atom.xml</id>
	<entry xml:lang="en">
		<title>Building a New Internet From the Ground Up – Part 4: Network</title>
		<published>2022-02-03T00:00:00+00:00</published>
		<updated>2022-02-03T00:00:00+00:00</updated>
		<link href="https://threefoldfoundation.github.io/www_threefold_io/blog/building-a-new-internet-from-the-ground-up-4/" type="text/html"/>
		<id>https://threefoldfoundation.github.io/www_threefold_io/blog/building-a-new-internet-from-the-ground-up-4/</id>
		<content type="html">&lt;p&gt;After introducing the ThreeFold Grid in &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;blog&#x2F;an_intro_to_the_threefold_grid&#x2F;&quot;&gt;part one&lt;&#x2F;a&gt; and diving deep into &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;blog&#x2F;building_a_new_internet_from_the_ground_up_pt2&#x2F;&quot;&gt;storage&lt;&#x2F;a&gt; and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;blog&#x2F;building_a_new_internet_from_the_ground_up_3&#x2F;&quot;&gt;compute&lt;&#x2F;a&gt;, we’re back with part 4 to look at the networking aspects of the ThreeFold Grid.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Computer networking is a rather complex phenomenon with a thankfully intuitive outcome: you send messages from one place to another. We all understand that our digital devices become a lot less interesting when they are not connected to the Internet. However, networking is not just Internet, and when it comes to building a new Internet, it’s important to understand what that means.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;The existing Internet can be defined as a global set of networks and protocols that enable us to do things like load web pages and use apps that rely on external data. It depends on lots of underlying infrastructure, including fiber optic cables running along the ocean floor, our home routers and their connection to an Internet service provider (ISP), lots of cell service towers, and an increasing number of satellites. All of that makes the Internet possible, and it’s still required for a new Internet to function.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;library.threefold.me&#x2F;info&#x2F;threefold#&#x2F;&quot;&gt;ThreeFold&lt;&#x2F;a&gt; uses and builds new protocols to create a network that is interoperable with the existing Internet. These include private overlay networks, the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;forum.threefold.io&#x2F;t&#x2F;how-our-planetary-network-works&#x2F;1210&quot;&gt;Planetary Network&lt;&#x2F;a&gt; based on Yggdrasil, and various interfaces to the public Internet. Let’s see how they work.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;private-overlay-networks&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#private-overlay-networks&quot; aria-label=&quot;Anchor link for: private-overlay-networks&quot;&gt;🔗&lt;&#x2F;a&gt;Private overlay networks&lt;&#x2F;h2&gt;
&lt;p&gt;Every deployment on the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;library.threefold.me&#x2F;info&#x2F;threefold#&#x2F;threefold__tfgrid_primitives?id=network-uses-nu&quot;&gt;ThreeFold Grid&lt;&#x2F;a&gt; belongs to a network, which is one of the Grid primitives. These networks allow data to be transmitted between workloads in a private and secure manner. They are called overlay networks because they pass traffic over some underlying network. That could be within a single node or between nodes on infrastructure provided by a farmer. The Grid uses software called WireGuard for this purpose, a simple, fast, and secure option among its alternatives.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;By means of encryption, the traffic on a private overlay network is unreadable to any other device on that network. Likewise, the workloads within the private network have no visibility of the underlying network. Individuals who deploy workloads can access their networks over a secure tunnel, assuming that one of the nodes in the network is reachable from the public Internet. This is suitable for workload administration and some private applications. For public services and peer-to-peer communication, the ThreeFold Grid provides other solutions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planetary-network&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#planetary-network&quot; aria-label=&quot;Anchor link for: planetary-network&quot;&gt;🔗&lt;&#x2F;a&gt;Planetary Network&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;library.threefold.me&#x2F;info&#x2F;manual&#x2F;#&#x2F;technology&#x2F;threefold__planetary_network?id=planetary-network&quot;&gt;Planetary Network&lt;&#x2F;a&gt; is an implementation of the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;yggdrasil-network.github.io&#x2F;about.html&quot;&gt;Yggdrasil Network&lt;&#x2F;a&gt;, which is a next generation approach to network routing. It is a peer-to-peer solution where all traffic is encrypted and takes the shortest path to its destination. These features make it highly compatible with the ethos and goals of the ThreeFold Grid: privacy, security, and efficiency. The design also allows nodes, workloads, and users to communicate freely without relying on centralized intermediaries.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Many &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;library.threefold.me&#x2F;info&#x2F;threefold#&#x2F;tfgrid&#x2F;farming&#x2F;threefold__farming_intro?id=threefold-farming&quot;&gt;ThreeFold Farmers&lt;&#x2F;a&gt; connect their nodes to a home router which blocks all inbound traffic by default. This is a sensible feature that doesn’t interfere with most Internet usage (enthusiasts who want to host their own website or a gaming server might bypass this, for example). However, nodes on the Grid need to be reachable, especially in order to receive workload definitions from deployers.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;The Planetary Network solves this by accepting inbound traffic through an outbound connection to a publicly accessible peer. You can think of this like making a call to an operator and then waiting for another call to be routed to you on that line. Even if your phone is set to block all incoming calls, someone can still reach you if they can reach the operator.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;This also provides a way for workloads to communicate with one another and be reachable by users. Anyone can enable the Planetary Network on their own device to access sites and services in a very &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;forum.threefold.io&#x2F;t&#x2F;critical-security-updates-for-apple-and-google-underline-need-for-secure-it-ecosystem&#x2F;1271&quot;&gt;secure and private&lt;&#x2F;a&gt; way. While the ThreeFold Grid is designed to be fully interoperable with the existing Internet, the Planetary Network provides an alternative which can sit side by side in a seamless way.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;reliable-message-bus&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#reliable-message-bus&quot; aria-label=&quot;Anchor link for: reliable-message-bus&quot;&gt;🔗&lt;&#x2F;a&gt;Reliable Message Bus&lt;&#x2F;h3&gt;
&lt;p&gt;Using the Planetary Network, nodes and Grid users can send messages over the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;library.threefold.me&#x2F;info&#x2F;threefold#&#x2F;manual__rmd&quot;&gt;Reliable Message Bus&lt;&#x2F;a&gt;. Notably, it is used for the delivery of workload definitions as mentioned earlier. &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;forum.threefold.io&#x2F;t&#x2F;all-you-need-to-know-about-zero-os&#x2F;1734&quot;&gt;Zero-OS&lt;&#x2F;a&gt; supports some other RMB messages as well, for doing things like checking available capacity on a node in real time. RMB is a general purpose protocol that can be used by developers in their applications. It queries the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;blog&#x2F;tf_chain&#x2F;&quot;&gt;ThreeFold Blockchain&lt;&#x2F;a&gt; as a kind of address book for the Planetary Network, enabling nodes and users to find each other in a decentralized way.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;public-ips-and-web-gateways&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#public-ips-and-web-gateways&quot; aria-label=&quot;Anchor link for: public-ips-and-web-gateways&quot;&gt;🔗&lt;&#x2F;a&gt;Public IPs and Web Gateways&lt;&#x2F;h2&gt;
&lt;p&gt;Finally, let’s see how the Grid can offer services over the public Internet using public IP addresses and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;tech&#x2F;web-gateway&#x2F;&quot;&gt;web gateways&lt;&#x2F;a&gt;. Everytime we type a domain name into our browser, like threefold.io, it is resolved to an IP address. The browser then forms a connection with that address to retrieve the site we’re looking for. Reviving a theme from earlier, that IP must be publicly reachable.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;public-ips&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#public-ips&quot; aria-label=&quot;Anchor link for: public-ips&quot;&gt;🔗&lt;&#x2F;a&gt;Public IPs&lt;&#x2F;h3&gt;
&lt;p&gt;We’re in the midst of a shift from the older IPv4 standard to the newer IPv6 standard. While IPv6 has plenty of addresses for every device on the planet and many more, it hasn’t been universally adopted yet, and IPv4 addresses are in short supply. You likely have one assigned to your router at home, and these days, even getting a second one from your ISP can be a difficult and expensive proposition.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;The ThreeFold Grid allows farmers who own blocks of IPv4 addresses to rent them out to deployers. These addresses get attached to individual workloads which are then reachable over the public Internet. A deployer could then assign their own domain name to that IP and host a website there. This is a very flexible way to make Grid deployments publicly available, but it comes at a relatively high cost.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;web-gateways&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#web-gateways&quot; aria-label=&quot;Anchor link for: web-gateways&quot;&gt;🔗&lt;&#x2F;a&gt;Web Gateways&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;library.threefold.me&#x2F;info&#x2F;manual&#x2F;#&#x2F;technology&#x2F;threefold__webgw&quot;&gt;Web gateways&lt;&#x2F;a&gt; are another way to make workloads on the ThreeFold Grid available over the public Internet. In this case, the farmer may provide a domain name that points to one of their nodes which is publicly reachable. Deployers are then able to reserve a subdomain, like explorer.threefold.io is a subdomain of threefold.io, that routes traffic to their workload. It is also possible for a deployer to point their own domain to the gateway node which then routes traffic to the appropriate workloads.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;We glossed over a bit in the earlier description of domain name to IP address resolution. In fact, multiple domains can point to a single IP address and this is common practice among existing web hosts. Adding similar functionality to the Grid helps to ease the demand for IPv4 addresses and is a lower cost solution for deployers than renting a dedicated IP. The web gateway also serves to enhance security and reliability of Grid-hosted services.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;The gateway provides a connection from the public Internet to the secure private overlay networks that all workloads use. However, this is not a standard network connection but instead a network socket, which provides security through separation. This is something like passing along the contents of mail pieces without their envelopes. Web gateways also enable redundancy, as multiple gateways can point to the same workload, and multiple workloads can serve the same set of gateways.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;When we say the ThreeFold Grid scales limitlessly, this is one of the ways that’s true. Many nodes, many gateways, many applications, and many users can all fit into this model. Deployers can start with a single &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;library.threefold.me&#x2F;info&#x2F;manual&#x2F;#&#x2F;manual__weblets_vm?id=virtual-machine&quot;&gt;virtual machine&lt;&#x2F;a&gt; and a single public IP like in the example I’ll use to wrap up this piece below, then ramp up to a globally distributed and highly redundant system as their requirements grow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;send-receive-complete&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#send-receive-complete&quot; aria-label=&quot;Anchor link for: send-receive-complete&quot;&gt;🔗&lt;&#x2F;a&gt;Send, receive, complete&lt;&#x2F;h2&gt;
&lt;p&gt;Now we’ve seen how the ThreeFold Grid handles networking. From private and secure communication between workloads, to next generation &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;tech&#x2F;peer-to-peer&#x2F;&quot;&gt;peer-to-peer&lt;&#x2F;a&gt; communication and full compatibility with the existing Internet, these offerings are comprehensive. Not only that, but they can be pretty darn fun to play with too.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;In my own recent experience, I deployed a virtual machine on the Grid with a public IP and hosted a simple website with a map of nodes on the Grid that I’d been working on. I was able to quickly share it with some colleagues and members of the community. It went from a project I was tinkering with on my own computer to a live site on the Internet in a matter of minutes, thanks especially to the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;forum.threefold.io&#x2F;t&#x2F;tf-deep-dive-session-5-threefold-grid-architecture&#x2F;1756&quot;&gt;networking features&lt;&#x2F;a&gt; of the ThreeFold Grid.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;For the final piece of this series, we’ll see how everything comes together to turn computer code into a meaningful digital experience. Stay tuned!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Building a New Internet From the Ground Up – Part 3: Compute</title>
		<published>2021-10-04T00:00:00+00:00</published>
		<updated>2021-10-04T00:00:00+00:00</updated>
		<link href="https://threefoldfoundation.github.io/www_threefold_io/blog/building-a-new-internet-from-the-ground-up-3/" type="text/html"/>
		<id>https://threefoldfoundation.github.io/www_threefold_io/blog/building-a-new-internet-from-the-ground-up-3/</id>
		<content type="html">&lt;p&gt;&lt;em&gt;Welcome back for another installment of our accessible series on ThreeFold Grid technology. We are working through the three major     categories that make up cloud infrastructure: storage, compute, and network. This time, we’ll be focusing on compute.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-is-compute&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-is-compute&quot; aria-label=&quot;Anchor link for: what-is-compute&quot;&gt;🔗&lt;&#x2F;a&gt;What is compute?&lt;&#x2F;h2&gt;
&lt;p&gt;While &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;blog&#x2F;building_a_new_internet_from_the_ground_up_pt2&#x2F;&quot;&gt;storage&lt;&#x2F;a&gt; and network are fairly intuitive concepts – where data lives and how it gets around – compute is about the more mysterious realm of data processing and ultimately computer programming. Don’t worry though, you don’t need any technical abilities to gain a deeper understanding of what’s happening behind the scenes when we use apps or interact with web sites.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;As mentioned in the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;blog&#x2F;an_intro_to_the_threefold_grid&#x2F;&quot;&gt;first part&lt;&#x2F;a&gt; of this series, compute is basically what happens with data once it reaches its destination. Compute gives data relevance, by processing it according to the instructions provided by developers in their source code. When talking about what the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;grid&quot;&gt;ThreeFold Grid&lt;&#x2F;a&gt; offers in terms of compute, it’s mostly about how the code that developers produce gets executed in order to provide the services we enjoy. &lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;With ThreeFold, this actually happens for the most part using the same tools and systems provided by traditional cloud services, meaning that it’s highly compatible with existing cloud applications. What really makes the Grid different is that it’s been designed to provide a level of efficiency and security that simply isn’t possible without starting “from the ground up”. Before we get into specifics of compute offerings built into ThreeFold’s &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;how-it-works&#x2F;zero-os&quot;&gt;Zero-OS&lt;&#x2F;a&gt;, let’s briefly explore what computing is.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;playing-with-zeroes-and-ones&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#playing-with-zeroes-and-ones&quot; aria-label=&quot;Anchor link for: playing-with-zeroes-and-ones&quot;&gt;🔗&lt;&#x2F;a&gt;Playing with zeroes and ones&lt;&#x2F;h2&gt;
&lt;p&gt;Everything a computer’s central processing unit does is based on a limited set of instructions that includes basic mathematical functions, logical operations, and ways to control the flow of a program. At their core, computers are really just automated adding machines that execute specified operations on whatever input they receive. It may be hard to believe that simple math creates all of the vibrant digital experience we enjoy, but at a certain low level, that’s the truth.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Take a messaging app as an example. Within a computer, all of the text, emojis, and images we see are represented by numbers. When we search for some text within a chat, matches are determined by checking if the numbers corresponding to the words we typed are equal to some numbers corresponding to words that appear in the chat history. This information is then converted into the list of results we see on screen.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;In this context, compute is mostly responsible for organizing all of our messages based on the individual or group we were talking with, the time that the message happened, and whether or not we’ve opened it yet. Typically, a messaging app stores data both on our local devices and on a back end in the cloud. Compute is also how the service decides to copy messages you sent on one device to other devices where you have the same app installed.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Here is an important distinction about how the ThreeFold Grid operates. In a traditional cloud environment, it is impossible to know for sure what is happening on the backend, even if you are the one running the service. The administrative access retained by the cloud provider can be used for surveillance and tampering that can be very difficult or impossible to detect. &lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Zero OS offers a unique assurance that no one can abuse the Grid in this way, because it operates autonomously with no facilities provided for human intervention. In order to utilize compute capacity on the Grid, individuals and organizations deploy their choice of several “primitives,” or basic components, that provide an environment for code to be executed and create the magic we experience as online applications.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;threefold-compute-primitives&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#threefold-compute-primitives&quot; aria-label=&quot;Anchor link for: threefold-compute-primitives&quot;&gt;🔗&lt;&#x2F;a&gt;ThreeFold Compute Primitives&lt;&#x2F;h2&gt;
&lt;p&gt;Since we’re getting a bit into the technical weeds here, we’ll just take a brief look at each primitive and what makes it special.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zmachine&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#zmachine&quot; aria-label=&quot;Anchor link for: zmachine&quot;&gt;🔗&lt;&#x2F;a&gt;Zmachine&lt;&#x2F;h3&gt;
&lt;p&gt;Zmachine is a lightweight virtual machine (VM) implementation that’s been developed in a uniquely efficient way by ThreeFold. VMs are essentially computers within computers, allowing multiple operating systems to run on a single physical system. A common example is running the Windows operating system on a Mac that’s already running MacOS. &lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;In the cloud world, virtual machines are a classic way to manage complex deployments with flexibility and resilience – by packaging different components into different VMs that can be run side by side and moved between different physical servers with ease. While VMs have been replaced in many cases with the new container paradigm, which we’ll cover next, they are still widely used and provide a simpler solution than containers that’s sufficient for many use cases.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;flist&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#flist&quot; aria-label=&quot;Anchor link for: flist&quot;&gt;🔗&lt;&#x2F;a&gt;Flist&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;how-it-works&#x2F;zflist&quot;&gt;Flist&lt;&#x2F;a&gt;  is a next generation container format which extends the industry standard Docker container concept in an efficient and secure way. It is supported directly at the operating system level on Zero OS, and in its latest version on ThreeFold Grid 3.0, provides a unique advantage over traditional containers via the use of mini virtual machines.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Containers provide greater efficiency and flexibility than VMs, by sharing parts of the host operating system between containers rather than duplicating the full operating system for each component. This, however, means that containers typically come with less of an assurance that different workloads and their data remain isolated from each other. By employing mini VMs, the Flist concept provides better isolation than traditional container systems while retaining the advantages that containers offer over full VMs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kubernetes&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#kubernetes&quot; aria-label=&quot;Anchor link for: kubernetes&quot;&gt;🔗&lt;&#x2F;a&gt;Kubernetes&lt;&#x2F;h3&gt;
&lt;p&gt;Containers usually represent small parts of a full solution, which are created, interconnected, and destroyed on an ongoing basis. Kubernetes is the industry standard container orchestration system, and it’s used to manage many of the largest and most complex cloud deployments. Kubernetes solutions are defined through configuration files that specify the types of containers, how updates are handled, and the network architecture both between containers and with the outside world.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Multiple physical servers or VMs are typically used for a Kubernetes “cluster” which provides redundancy and scalability. The ThreeFold Grid provides a lightweight Kubernetes VM that can be used to create clusters according to specific needs. Kubernetes users can, for the most part, simply bring their existing configuration files and recreate their deployments on a Grid based cluster seamlessly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wrapping-up&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#wrapping-up&quot; aria-label=&quot;Anchor link for: wrapping-up&quot;&gt;🔗&lt;&#x2F;a&gt;Wrapping up&lt;&#x2F;h2&gt;
&lt;p&gt;Taken together, the compute primitives offer a comprehensive alternative to existing cloud compute providers. Users of Docker, Kubernetes, and virtual machines can bring their deployments to the Grid with a minimal amount of migration effort. This is distinct from other decentralized cloud projects, which either offer a single solution like Kubernetes or a completely new environment that developers must adapt their code to run within.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Better yet, each compute offering on the ThreeFold Grid benefits from the unique efficiency and security features of Zero OS, as well as the unique aspects of the primitives themselves. Thanks again for joining me on this journey into the wonderful world of ThreeFold technology. In the next episode, we’ll cover the last element of the cloud infrastructure triad: network.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Interview – Designing Solutions for a P2P Future</title>
		<published>2021-08-26T00:00:00+00:00</published>
		<updated>2021-08-26T00:00:00+00:00</updated>
		<link href="https://threefoldfoundation.github.io/www_threefold_io/blog/interview-with-jimber/" type="text/html"/>
		<id>https://threefoldfoundation.github.io/www_threefold_io/blog/interview-with-jimber/</id>
		<content type="html">&lt;p&gt;Earlier this month, I met with Jonas Delrue from Jimber, the team developing P2P solutions like video chat, office workspace, isolated web browser, and messaging, using the Digital Twin platform. Digital Twin is a use case on top of the ThreeFold Grid. We talked about the technical hurdles and motivations for developing private, decentralized, and open source alternatives to popular products from major corporations.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;The following has been edited lightly for clarity and flow.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
I’m wondering about this video chat solution that we’re using for the interview right now. Building reliable video conferencing took a long time for the industry to get right, as far as I understand, and this seems very comparable in performance to Zoom. What did it take to produce this, what challenges came up, and what open source components are you using?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Yes, the solution is fully open source, using Janus as a back end which is a signaling and MTU server that handles all the traffic. But the main reason why we created our own solution is because we want to deploy the solution on the ThreeFold Grid and make a really decentralized video application. So everyone can start their own video room and the data will only be shared between the members of the room, instead of going through Zoom.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;The reasons for this have become very clear in the latest developments at Zoom where they had the lawsuits for end-to-end encryption. So something that our solution will offer is not only end-to-end encryption but also the traffic won’t go through central points – so there’s no way for us to eavesdrop on any of the conversations as a company since we’re not included in the process. So that’s the main reason that we created this one.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Very cool. I know for Zoom free accounts, all traffic is routed through servers in the United States which also has performance implications for anyone in other parts of the world. You have this big transatlantic hop back and forth for people talking to each other in different parts of Europe, for example, which could create lag or dropouts. And of course, the privacy feature is super important, because if we’re using Zoom or any other centralized service it’s a black box. They say your connections are end-to-end encrypted, but there’s no way to verify that without open source code and self hosting.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Yep, so what we offer is fully open source, and using the Digital Twin platform you’ll be able to start your own solutions, so it’s fully in your own hands.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Do you know what kind of resources are required to run the video chat server?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;The CPU and memory usage on the server is very low, but bit rate depends on how good your connection is and how high quality you want to use. Right now we have some default quality but we will be able to make that configurable, so you’ll be able to choose how much data that you want to consume during your conversation, which will of course imply a better or a worse resolution and experience.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Totally. I’ve heard that we should be able to host many Digital Twins on a single node. I’m curious of your thoughts on that. How many Digital Twins do you think we could run on a single Titan node or server in a rack?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;That’s a hard one. I’d have to check for real numbers on the current implementation, but the thing is that there’s not really a hard limit, as long as you keep improving your software and making it more efficient, making it more suitable to the scaling case. Right now in centralized systems this mostly is not a concern, but if you make it more suitable to self hosting and the digital twin scenario, then we should be able to get really far on that.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;&lt;br &#x2F;&gt;
&lt;em&gt;It’s going to take some effort and time to improve it and to make it better so the usage goes down, while the hardware also gets better so it’s two ways. I think in the long run we should be able to host really lots and lots of Digital Twins on one single node. It also depends on what you’re doing on the Digital Twins, if everyone is doing video conversations it will of course have more consumption than if everyone is just chatting in text.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
There’s a good number of features here in video chat already like the background replace and some others I was impressed to see already during my testing. Of course Zoom has many more features like hosting these large conferences, breakout groups, allowing people to raise their hand digitally. I’m wondering what features are on the road map for this solution and what should we expect to see coming next?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Raising hands is one of the things that we’re developing now, but we’re mostly doing improvements at the back end so we can get a more efficient solution and a solution that is better suited to the decentralized way of working. Now, we don’t have the size of team that Zoom has of course at this point, so we’re a bit slower in releasing new features. We do have a list of things that we want to implement in the near future. Things like waiting rooms and all the stuff that you came up with, they’re on the road map but not for the very short term since right now we’re really focusing on getting this thing working in a decentralized way on the Grid.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
That makes sense. And what is the status of that? Are we using the Grid right now, or is this a staging server?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;This is a production server of Jimber. We use this one to talk to our employees, so for internal calls, and we’re also using it to talk to clients. We’ve been using it for over six months without any problems so it’s really production ready, but this version is not running on the Grid right now. We do have deployments on the Grid that work perfectly.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Good to know. Is that something that someone with the proper amount of knowledge and motivation could test for themselves already, running the solution on the Grid?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Yeah, they should be able to. It might be that they still need a little bit of help from the technical team, but it should be doable, yes.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Cool, I’ll put that on my list of things to try out. So that’s video chat. Do you see any challenges arising from quirks of the Grid in implementing any features or scaling things up to a certain level. Is there anything that’s tricky about moving something like this onto the Grid?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;It’s more about the Digital Twin than the meeting solution itself. Right now we’re really working on getting the Digital Twin able to launch for a single person, so we’re checking out how we’ll do the deployments, the payment flow, things like that.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;&lt;br &#x2F;&gt;
&lt;em&gt;So for us, that’s the challenge right now, but in the long run it’s probably going to be scaling, being sure that the Digital Twin runs close enough to the person actually using it, being sure that the interaction between Digital Twins is really fast and with low latency. Things like that will of course be a huge challenge, and also keeping everything private, making sure that everything is secure is also a bit challenging.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;&lt;br &#x2F;&gt;
&lt;em&gt;Another big challenge is that users are not used to a decentralized environment. So if you lose your seed phrase or in some way destroy your own Digital Twin, it’s decentralized so we can’t access it. There isn’t a company that can just look into the big system and fix it for you. You are a bit responsible for your own system so that’s also a bit of a challenge. So to get users informed and make software that’s really easy for them, where they can’t mess things up, and where users can give us enough logs when something goes wrong to help them in a decentralized way.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
For sure, I know that’s a big concern around our VDC solution as well. You onboard someone into the system and they need to take responsibility for their own data and deployments. I think that’s a huge issue across this space right, you want to give people the power but they also need to be able to take the responsibility. We’ll see how that goes, as users start to come onboard and what kinds of challenges they run into.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Yeah, that’s going to be the fun part, once users really start onboarding and start using everything. It’s mostly a stressful situation at first if you launch a new product, but we’re going to be starting off with a beta version so we don’t get too much ahead of ourselves. Using the beta period to really get the software to be at the point where we need it for production will probably be the best step, to take the stress a bit off the team, and in the next version we can go full fledged production with a really nice product.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
How soon do you think we’ll be ready to invite some members of the community to start testing?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;We want to have a version ready for September, so that’s what we’re looking at.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Great. Let’s shift gears and talk about the file browser and office solution, which I’ve also tested. It’s very cool. You’re able to preview images and videos, edit documents, and more. I understand it’s at least two open source components, you have the file browser and OnlyOffice working together.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;So the file browser is totally made by us, it’s fully new. We use OnlyOffice as a document service to edit the documents, and right now you can already share documents with other people and collaborate on documents. We’re building a kind of online office alternative that is owned by you and where your files are safe from companies trying to get data from it to give you specific advertisements and that sort of thing.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Okay, I didn’t realize that the file browser piece had been built in house.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;It’s still very basic. It doesn’t have all the features of the big ones yet. It has the basic functionality—you can upload files, make folders, put the files in the folders, open files, collaborate, save them, share with people, all of those things are available, so it’s pretty usable. This has been launched in a staging version right now, so it’s not available to the full public yet but it should be available in September when we launch the first Digital Twin version.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
I’ve tested it, and it works really well. I’m curious again—obviously building something like this isn’t a small task. Building an alternative to products from massive corporations with huge budgets and teams. So for your team, what are the challenges and how did you make this work?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Of course using open source components like OnlyOffice is a big difference. It’d be hard to make all of the documents services ourselves—that would be really insane. So using open source components is a big key factor in this, but a second thing is that our team has been building and trying out stuff like this for a few years so we do have some experience in building these kinds of tools.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
So in Digital Twin we also have the chat solution. Is there anything about chat that’s cool or unique?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;We’re looking at the big modern chat applications for our ideas there, as well as adding some new stuff in it. For the most part you have all the features that you need. You can send text messages and audio streams. You can send GIFs, which is of course the most important feature in any chat application. Then there’s, block users, delete users, add users to make group conversations, share files with the whole group, all the things like that.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Does that mean that we should be able to switch from Telegram sometime in the near future?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;I hope so yeah, it would be really cool when we can do that. The biggest difference of course is the underlying decentralized architecture.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
So finally, to wrap up, maybe you could talk a bit about how privacy and security is handled? We have end-to-end encryption, we have self hosting of data. What does that look like and how is it built?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;In terms of the platform itself, that’s something that the ThreeFold core team is more working on, so I know the principles and know how it works but I can’t give you real technical details. As for what we build, the biggest tool that we use right now for end-to-end encryption is Yggdrasil or the Planetary Network, as we refer to it in ThreeFold. So that’s a technology where multiple computers form one grid and they can exchange messages with each other which are fully end-to-end encrypted, using the standard TCP stack of those nodes. In that way we can communicate between Digital Twins in a very easy way, using standard technology, but just changing the underlying network architecture.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Totally, I know a bit about Yggdrasil. I haven’t had a chance to test it myself, but it’s super exciting technology, right? It allows anyone behind a firewall to still have a public address where they can still be reachable on IPv6 and everything is encrypted.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;And as soon as you’re connected to one node, you’re connected to every one of them, because they all forward the packets, all end to end encrypted. So it’s a really cool technology.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Absolutely, and it’s great to be able to build on this kind of stuff. Like you’re saying, the open source components give us a big head start in trying to build these alternatives.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Indeed.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Is there anything else you’d like to say about what you all have been building over there?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;The whole ride has been really cool, we’re kind of working on a few things at once, and ThreeFold is one of the components of it. For us it’s a very exciting project, it’s very technical and building something entirely new that doesn’t exist yet using all these open source components. So for the team it’s a very cool challenge, we really like to work on it, and it drives the team to create something really cool. It’s a great opportunity.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
I love that, and it’s a big reason I’m excited to be involved with ThreeFold as well: building something that’s totally new, going from 0 to 1, and then inviting the world to come check it out and enjoy all the benefits.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Oh yeah, I forgot to ask about the web browser. I understand that Jimber has been building this for a while and I’ve seen some things about this on your website. So the web browser solution essentially renders the webpage on the back end and just shows the user an image of it?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Yeah, it caches the page on the back end and forwards the data to the client where it’s rendered. So the code of the website itself doesn’t reach you, and that’s a solution that we use for multiple things. One is to protect APIs from getting attacked by users, what we call web application isolation. The second use case is where we have an office environment where people browse the internet and they use our solution to kind of make a gap between the computer in the company and the internet itself. But they can still browse the web and use all their favorite tools without having the risk of getting viruses and things like that.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
I didn’t realize that there’s benefit on the server end as well. So by requiring users to interact with a web service through the browser solution, that provides isolation for the app as well?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;If users are going to the service they are going through our browser, which will fetch the service for you and just give you a state of how it looks so that way we can really protect the back end of the applications from multiple attacks.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
And does this effectively provide a VPN for users as well?
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;It’s kind of the same thing, yes.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
That’s super exciting. Something that folks ask me about when they learn about ThreeFold is hosting VPNs on the Grid as a way to get the benefits of VPN in a decentralized way.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;em&gt;Yggdrasil is a bit closer to a VPN than our browser itself, but they pretty much help each other out. The browser in the ThreeFold network is used to protect the Digital Twin itself, to make it very secure and private for you, but the browser can also be used to browse websites from any country in the world without restrictions. So it can be used in that way too, which is kind of similar to how people at home use VPNs.&lt;&#x2F;em&gt;
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
That’s good to know. Well, I really like the bigger picture here of an internet experience that’s end-to-end encrypted, where all of your data is under your control, and you have the anonymity and privacy that a VPN would provide. It’s very exciting stuff, and I’m looking forward to sharing about it with our larger community.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Building a New Internet From the Ground Up – Part 2: Storage</title>
		<published>2021-07-28T00:00:00+00:00</published>
		<updated>2021-07-28T00:00:00+00:00</updated>
		<link href="https://threefoldfoundation.github.io/www_threefold_io/blog/building-a-new-internet-from-the-ground-up/" type="text/html"/>
		<id>https://threefoldfoundation.github.io/www_threefold_io/blog/building-a-new-internet-from-the-ground-up/</id>
		<content type="html">&lt;p&gt;Welcome back for the second part of this introductory series on ThreeFold Grid technology. &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;threefold.io&#x2F;blog&#x2F;an_intro_to_the_threefold_grid&#x2F;&quot;&gt;Last time&lt;&#x2F;a&gt; we took a high level view of all that the Grid offers. This time, we’ll be zooming in on storage, covering the low level components and how they can provide a familiar experience like the cloud “drives” and “boxes” we use today.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
The ThreeFold Grid offers several different storage primitives that can be combined in various ways to meet the needs of developers and end users of Grid capacity. Ultimately, all storage services are a way of presenting the underlying hardware to software workloads in various ways, according to the desired features. ThreeFold has created a few unique storage offerings, providing distinct benefits over legacy cloud infrastructure. From the start, every component has been designed for optimal efficiency and they work together to offer an unprecedented level of security.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Our most basic storage primitive is a “volume”, which simply offers some disk space to an application in a generic way. We’ll focus more on the innovative solutions that are built on the Zero Database, or Zdb. These are compatible with existing use cases but also represent a quantum leap forward for privacy and security. They are called Zdbfs, Zstor, and QSFS. Let’s take a look at each component and how they work together to provide a complete set of tools for developers building on the Grid. We’ll also see why this matters to end users of services that are hosted on the Grid.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zdb&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#zdb&quot; aria-label=&quot;Anchor link for: zdb&quot;&gt;🔗&lt;&#x2F;a&gt;Zdb&lt;&#x2F;h2&gt;
&lt;p&gt;Zdb is a low level offering that implements with a subset of features from the popular Redis protocol. It is a key-value store, which means that information is indexed like a dictionary. Each “word” in the database is associated with a “definition” or piece of data. Zdb is super fast and efficient, along with operating in an “append only” manner. This means that all new data is added to empty space following the end of existing data, never overwritten. It’s like writing in pen on paper without leaving any white space.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Append only has many advantages, including extending the life of certain hardware and offering archiving features out of the box. The disadvantage, of course, is that old data is retained even when no longer needed. However, this can be addressed by periodically “compacting” the data, to remove what’s no longer needed and restructure what remains with the same level of efficiency. We use Zdb as a base layer for more complex storage implementations that benefit from these features.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zdbfs&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#zdbfs&quot; aria-label=&quot;Anchor link for: zdbfs&quot;&gt;🔗&lt;&#x2F;a&gt;Zdbfs&lt;&#x2F;h2&gt;
&lt;p&gt;While Zdb has all of those neat properties, it requires that applications utilize a specific database interface. To expand its capabilities, we have the Zdb Filesystem. With Zdbfs, the back end Zdb is exposed through the most common interface used for storing and retrieving data: a filesystem. This is the same format we’re all familiar with from the file explorers on our computers. When running Zdbfs, a new “folder” appears on the system, allowing reading and writing to the connected Zdb without any concern for the underlying database. With Zdbfs, nearly all existing tools for working with data can be plugged in to and benefit from the advantages of Zdb.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zstor&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#zstor&quot; aria-label=&quot;Anchor link for: zstor&quot;&gt;🔗&lt;&#x2F;a&gt;Zstor&lt;&#x2F;h2&gt;
&lt;p&gt;So far, we’ve been discussing solutions that utilize storage space on a single node only. While this offers flexibility for developers with a variety of needs, it is also limited in the sense that the failure of a single node would result in the loss of all data. With that in mind, we offer the Zstor solution for spreading data across multiple nodes in a way that provides both resilience against failures and unprecedented security.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Zstor takes a single file as input, to be stored among a number of nodes as specified in its configuration. The system is flexible and able to cater to different needs for performance, redundancy, and geographical distribution. Understanding what happens behind the scenes requires a little math, but I’ll provide as simple an explanation as I can. Zstor has a very unique property: it does not actually upload any of the user’s data to the back end nodes, but it is able to reconstruct the data later based on the descriptive information that is stored.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-magic-of-erasure-encoding&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-magic-of-erasure-encoding&quot; aria-label=&quot;Anchor link for: the-magic-of-erasure-encoding&quot;&gt;🔗&lt;&#x2F;a&gt;The magic of erasure encoding&lt;&#x2F;h3&gt;
&lt;p&gt;Sounds like magic? Well, let’s explore briefly how this is possible. Zstor relies on a technology known as erasure encoding, which was originally designed to protect data against errors that sometimes occur in the normal operation of computer hardware. Rather than simply making copies of the data as backups, a clever scheme is used to efficiently offer the same benefit. With basic redundancy, four extra copies would be needed to accommodate four failures without a loss of data. Erasure encoding can accomplish the same failure tolerance using less than half the space needed for the original data.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
While erasure encoding can be implemented by storing the data itself along with some extra data known as “parity”, it can also be implemented without storing the original data at all. As a simplified example, let’s say that we want to store the number 13. First, we take each digit individually, 1 and 3. Next, we calculate 1 + 3 = 4 and 3 - 1 = 2. By storing 4 and 2, along with the instructions to reverse these calculations, we have everything needed to get back to 13. If we add one more equation, say 1 - 3 = -2, we can restore the original data using any two of the numbers we’ve computed.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
Each of our values would be stored on separate nodes, while the instructions to recombine them would be stored in yet another location. If an attacker were to compromise one of these nodes, they would only have a number that’s meaningless without the other elements. If a single node fails, the original data can be restored using the remaining nodes, and we can add a new node to bring us back to our desired state. By tuning these values, additional security or redundancy can be achieved. We might decide that we want 9 of 10 values to be present for reconstruction, representing a high level of security. Alternatively, a 2 of 10 arrangement would provide high redundancy, tolerating the failure of 8 nodes.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;quantum-safe-filesystem&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#quantum-safe-filesystem&quot; aria-label=&quot;Anchor link for: quantum-safe-filesystem&quot;&gt;🔗&lt;&#x2F;a&gt;Quantum Safe Filesystem&lt;&#x2F;h2&gt;
&lt;p&gt;With all of these components working together, we have ThreeFold’s flagship storage solution, the Quantum Safe Filesystem or QSFS. It uses Zstor to backup data written to a Zdbfs. This provides the convenient and highly compatible filesystem interface along with the exceptional security and redundancy benefits of Zstor. We call it quantum safe, because even an attacker with a quantum computer would not be able to decode users’ data, if they managed to hack into one of the back end nodes—already an extraordinary feat given the exceptional security of Zero OS.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bringing-it-home&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bringing-it-home&quot; aria-label=&quot;Anchor link for: bringing-it-home&quot;&gt;🔗&lt;&#x2F;a&gt;Bringing it home&lt;&#x2F;h2&gt;
&lt;p&gt;So, we’ve toured a good bit of technology which might be feeling a bit abstract at this point. Bringing this home, our front end experience with these technologies can feel no different than any of the “drives” and “boxes” we use to store our files in the cloud. In fact, ThreeFold has already developed a prototype file browser based on QSFS which has many cool features like editing documents and viewing media directly in the web interface. It’s one piece of a full suite of solutions we’re excited to showcase and invite the community to test soon.
&lt;br&#x2F;&gt;
&lt;br&#x2F;&gt;
I hope you found this piece informative and approachable. Thanks for joining me to learn and explore the wonderful world of ThreeFold technology. We’ll cover more aspects of what makes it all tick in future parts of this series. Do you have questions or feel like chatting about what’s possible with ThreeFold’s technology? We’d love to hear from you on &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;forum.threefold.io&quot;&gt;our forum&lt;&#x2F;a&gt; or in &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;t.me&#x2F;threefold&quot;&gt;our Telegram group&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Building a New Internet From the Ground Up – Part 1: Introduction</title>
		<published>2021-07-19T00:00:00+00:00</published>
		<updated>2021-07-19T00:00:00+00:00</updated>
		<link href="https://threefoldfoundation.github.io/www_threefold_io/blog/an-intro-to-the-threefold-grid/" type="text/html"/>
		<id>https://threefoldfoundation.github.io/www_threefold_io/blog/an-intro-to-the-threefold-grid/</id>
		<content type="html">&lt;h2 id=&quot;an-intro-to-the-threefold-grid&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#an-intro-to-the-threefold-grid&quot; aria-label=&quot;Anchor link for: an-intro-to-the-threefold-grid&quot;&gt;🔗&lt;&#x2F;a&gt;An Intro to the ThreeFold Grid&lt;&#x2F;h2&gt;
&lt;p&gt;If you are a farmer or member of the ThreeFold community, you may be wondering about the capacity provided by the ThreeFold Grid and how it’s relevant to individuals and businesses who currently rely on centralized corporate clouds. This can be hard to imagine, because the back end infrastructure that makes all of our apps and services tick is generally invisible to us. &lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;This piece will be the first in a series where I’ll be working to understand what the technical components are and how ThreeFold provides an alternative with distinct benefits for individuals, businesses, and for the planet as a whole. But don’t worry, we’ll start from the ground level and build up understanding in a way that’s accessible to everyone.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;infrastructure-for-a-new-internet&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#infrastructure-for-a-new-internet&quot; aria-label=&quot;Anchor link for: infrastructure-for-a-new-internet&quot;&gt;🔗&lt;&#x2F;a&gt;Infrastructure for a New Internet&lt;&#x2F;h2&gt;
&lt;p&gt;So, what is the internet? In short, it is a network of interconnected devices that facilitates communication and commerce. These devices include our mobile phones and personal computers, but also the servers that store and process data to provide the end experiences we enjoy. Currently the vast majority of these servers live in massive data centers controlled by a handful of corporations. ThreeFold is changing this, by allowing anyone to connect computational and storage capacity to an open network that is available for all to use, known as the ThreeFold Grid. Our farmers do include some data centers operating on a smaller scale than major cloud providers, and also many individuals connecting nodes at their home or office all over the world.&lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;On the ThreeFold Grid, servers are known as 3Nodes. A 3Node can be pretty much any modern computer system, offering capacity by running the Zero OS operating system. This is a major distinguishing factor, both from the traditional cloud computing world and also from other projects working to create decentralized networks in this space. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-os-for-a-next-generation-cloud&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-os-for-a-next-generation-cloud&quot; aria-label=&quot;Anchor link for: the-os-for-a-next-generation-cloud&quot;&gt;🔗&lt;&#x2F;a&gt;The OS for a Next Generation Cloud&lt;&#x2F;h2&gt;
&lt;p&gt;By starting from the operating system level, ThreeFold is able to provide a network with much stronger security and greater efficiency than anything that came before. Zero OS includes a collection of components, known as “primitives”, which provide developers with everything they need. These primitives can be used to migrate existing applications from the legacy cloud and also to create new solutions that leverage the Grid’s capacity in unique ways.&lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;We’re all familiar with operating systems like Windows and MacOS that provide an interface to applications on our personal computers. The OS interacts with the underlying hardware to expose its capabilities in a way that’s useful for both the software it hosts and also the humans who utilize it. For example, when you launch an app on your phone, it is the OS that’s responsible for connecting it to data networks and providing access to peripherals like cameras or microphones. Things are a little different in the world of servers, where rather than through direct interactions, users benefit through the services provided to the applications we use.&lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;To extend the example, when you open a messaging app it will connect to a server somewhere to check for new messages and relay any messages you are sending to the recipient. Here we can see a central issue that has inspired the design of ThreeFold’s technology: when our messages pass through servers controlled by others, it creates an open door for surveillance of all kinds.&lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;ThreeFold farmers, on the other hand, have no administrative access to their nodes. Furthermore, each component offered by the ThreeFold Grid is built with the intention of allowing for secure and private storage, processing, and transmission of information. Of course, sharing is absolutely possible, but only when the creator of data or content chooses for it to happen.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;three-essential-resources&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#three-essential-resources&quot; aria-label=&quot;Anchor link for: three-essential-resources&quot;&gt;🔗&lt;&#x2F;a&gt;Three Essential Resources&lt;&#x2F;h2&gt;
&lt;p&gt;In the world of cloud computing, we speak of three basic resources provided by servers: compute, storage, and network. The ThreeFold Grid provides various primitives in each of these     categories, to fulfill all the same needs served by centralized cloud providers. While our offerings have the special properties discussed above, they are also highly compatible with the most popular tools and protocols currently used in the industry. This makes it relatively simple to migrate the back end applications, also known as “workloads”, that provide a kind of connective tissue for all of the digital experiences we enjoy on a daily basis.&lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;Workloads are pieces of software that provide services. If you upload a file to some cloud storage service, there could be a number of individual workloads orchestrated together in order to ensure the data you want to save is successfully transmitted to and stored in the back end system. We can understand the need for each kind of capacity by looking at the journey that your file might take in such a scenario. Starting on your device, a network connection, some processing, and finally storage capacity are all involved in providing the conditions that allow you to retrieve that file later.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;network&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#network&quot; aria-label=&quot;Anchor link for: network&quot;&gt;🔗&lt;&#x2F;a&gt;Network&lt;&#x2F;h2&gt;
&lt;p&gt;Networking takes place over cellular connections, wifi, and wired internet lines to move data from one place to another. For our purposes here, those details aren’t so important—we’ll focus on what happens once communication is completed by whatever means. &lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;When you connect to the cloud storage service, there are network workloads that transmit your data to the appropriate services that process and store it. This might consist of some routing and also authentication that ensures that you and only you access the files that are associated with your account. On the Grid, we provide primitives for secure peer to peer communication and also for allowing public access to back end services.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;compute&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#compute&quot; aria-label=&quot;Anchor link for: compute&quot;&gt;🔗&lt;&#x2F;a&gt;Compute&lt;&#x2F;h2&gt;
&lt;p&gt;Compute is what happens with data once it reaches its destination. Computers are mostly just fancy adding machines that take numbers and turn them into other numbers according to a set of specifications, which we call software. In our example, the compute step might involve compressing the information so it takes up less space and also deriving some useful statistics like the file’s original size. &lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;Of course, there are many details we’re glossing over here, and the compute resources are ultimately responsible for providing much of our end user experience and the interactivity of the apps we utilize. 3Nodes offer a compute environment that natively runs the vast majority of workloads in use today. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;storage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#storage&quot; aria-label=&quot;Anchor link for: storage&quot;&gt;🔗&lt;&#x2F;a&gt;Storage&lt;&#x2F;h2&gt;
&lt;p&gt;Storage, of course, is the disk space where data resides. It can be a little strange to think about, actually, that all of the information you’ve stored online actually has at least one physical location where it exists as many small electrical charges. On the Grid, application developers can access the disks of nodes directly, in a way that’s optimized for energy efficiency. &lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;We also have more advanced storage solutions that offer unparalleled security and low overhead redundancy, giving users the best possible guarantee that only they have access to their data and that it will actually be there when they go to retrieve it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;looking-forward&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#looking-forward&quot; aria-label=&quot;Anchor link for: looking-forward&quot;&gt;🔗&lt;&#x2F;a&gt;Looking Forward&lt;&#x2F;h2&gt;
&lt;p&gt;Taken together, network, storage, and compute are the raw elements that give life to the internet we know and love. On the ThreeFold Grid, these elements are expressed in a way that’s both familiar for developers but also pushes the limits of what is possible in terms of technical evolution. &lt;&#x2F;p&gt;
&lt;br&gt;
&lt;p&gt;Thanks so much for joining me on this introductory overview of what the Grid provides. Please join me next time for a deeper dive on some of what we’ve covered and more specifics about how ThreeFold technology represents a quantum leap for cloud computing.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
